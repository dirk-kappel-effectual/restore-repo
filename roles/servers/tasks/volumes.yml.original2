---

- name: "LOW | RHEL-07-021310 | RHEL-07-021320 | RHEL-07-021330 | RHEL-07-021340 | PATCH | The Red Hat Enterprise Linux operating system must be configured so that a separate file system is used for user home directories (such as /home or an equivalent), /var, the system audit data path, and /tmp (or equivalent)."
  become: true
  block:
  - name: Install LVM2
    ansible.builtin.yum:
      name: lvm2
      state: present

  - name: Install rsync
    ansible.builtin.yum:
      name: rsync
      state: present

  - name: Create volume group
    community.general.lvg:
      vg: vg-01
      pvs: "/dev/{{ block_device_name }}"

  - name: Create logical volumes
    community.general.lvol:
      vg: vg-01
      lv: "{{ item.lv}}"
      size: "{{ item.size }}"
    loop: "{{ lv_list }}"

  - name: Format the xfs filesystem
    community.general.filesystem:
      fstype: xfs
      dev: "{{ item.lv_dev }}"
    loop: "{{ lv_list }}"

  - name: Get UUIDs of logical volumes
    shell: blkid -s UUID -o value "{{ item.lv_dev }}"
    register: lv_uuid
    loop: "{{ lv_list }}"
    changed_when: false

  - name: Debug UUIDs
    debug:
      var: lv_uuid.results
    when: lv_uuid.results | length > 0

  - name: Mount /media/tmp volume
    ansible.posix.mount:
      # path: "{{ item.mount_point }}"
      path: /media/tmp
      src: "UUID={{ lv_uuid.results | selectattr('item.lv', 'equalto', item.lv) | map(attribute='stdout') | first }}"
      fstype: xfs
      opts: "{{ item.mount_options }}"
      state: mounted
    loop: "{{ lv_list }}"
    when: item.lv == 'var_tmp_vol'

  - name: Configure SELinux context of /media/tmp
    community.general.sefcontext:
      target: '/media/tmp(/.*)?'
      setype: tmp_t
      state: present

  - name: Apply new SELinux file context to filesystem
    ansible.builtin.command: restorecon -irv /media/tmp

  - name: rsync the data to /media/tmp
    ansible.builtin.shell: rsync -avAX --exclude 'tmp/*' {{ item.mount_point }}/ /media/tmp{{ item.mount_point }}/
    loop: "{{ lv_list }}"
    when:
      - item.lv != 'var_tmp_vol'

  - name: Mount Logical Volumes
    ansible.posix.mount:
      path: "{{ item.mount_point }}"
      src: "UUID={{ lv_uuid.results | selectattr('item.lv', 'equalto', item.lv) | map(attribute='stdout') | first }}"
      fstype: xfs
      opts: "{{ item.mount_options }}"
      state: mounted
      dump: 0
      passno: 2
    loop: "{{ lv_list }}"
    when:
      - item.lv != 'var_tmp_vol'

  - name: Configure SELinux context of attached LVM
    community.general.sefcontext:
      target: "'{{ item.mount_options }}(/.*)?'"
      setype: "{{ item.selinux_context }}"
      state: present
    loop: "{{ lv_list }}"
    when:
      - item.lv != 'var_tmp_vol'

  - name: Apply new SELinux file context to filesystems
    ansible.builtin.command: "restorecon -irv {{ item.mount_point}}"
    loop: "{{ lv_list }}"
    when:
      - item.lv != 'var_tmp_vol'

  - name: rsync the data to new mounts
    ansible.builtin.shell: rsync -avAX /media/tmp{{ item.mount_point }}/ {{ item.mount_point }}/ 
    loop:  "{{ lv_list }}"
    when: 
      - item.lv != 'var_tmp_vol'

  - name: Reformat /media/tmp with xfs filesystem
    community.general.filesystem:
      fstype: xfs
      dev: /dev/vg-01/var_tmp_vol
      force: true

  - name: Unmount /media/tmp
    ansible.builtin.mount:
      path: /media/tmp
      state: absent

  - name: Mount /var/tmp volume
    ansible.posix.mount:
      path: /var/tmp
      src: "UUID={{ lv_uuid.results | selectattr('item.lv', 'equalto', 'var_tmp_vol') | map(attribute='stdout') | first }}"
      fstype: xfs
      opts: "{{ item.mount_options }}"
      state: mounted
    loop: "{{ lv_list }}"
    when: item.lv == 'var_tmp_vol'

  tags:
    - volumes
    - lvm
    - rsync
    - RHEL-07-021310
    - RHEL-07-021320
    - RHEL-07-021330
    - RHEL-07-021340