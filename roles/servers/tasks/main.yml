---
- name: Get Python3 Version
  command: python3 --version
  register: python_version_output

- name: Get botocore Version
  command: pip show botocore | grep Version | awk '{print $2}'
  register: botocore_version_output
  changed_when: false

- name: Get boto3 Version
  command: pip show boto3 | grep Version | awk '{print $2}'
  register: boto3_version_output
  changed_when: false

- name: Display Versions
  debug:
    msg: |
      Python Version: {{ python_version_output.stdout }}
      botocore Version: {{ botocore_version_output.stdout }}
      boto3 Version: {{ boto3_version_output.stdout }}

- name: Install AWS Cloudwatch Agent
  block:
    - name: Download CloudWatch Agent
      ansible.builtin.get_url:
        url: "https://s3.amazonaws.com/amazoncloudwatch-agent/redhat/amd64/latest/amazon-cloudwatch-agent.rpm"
        dest: "/tmp/amazon-cloudwatch-agent.rpm"

    - name: Install CloudWatch Agent
      ansible.builtin.package:
        name: "/tmp/amazon-cloudwatch-agent.rpm"
        state: present
        disable_gpg_check: true

    - name: Copy CloudWatch Agent Configuration file
      ansible.builtin.copy:
        src: "./files/cw_config.json"
        dest: "/opt/aws/amazon-cloudwatch-agent/etc/amazon-cloudwatch-agent.json"
        owner: root
        group: root
        mode: 0644
      notify: "Enable CloudWatch Agent"
  tags: cloudwatch

- name: Install Iptables
  ansible.builtin.import_tasks:
    file: firewall.yml
  tags:
    - firewall

- name: "MEDIUM | RHEL-07-010340 | Find all sudoers files."
  ansible.builtin.shell: "find /etc/sudoers /etc/sudoers.d/ -type f ! -name '*~' ! -name '*.*'"
  changed_when: false
  failed_when: false
  check_mode: false
  register: rhel7stig_sudoers_files
  tags:
      - RHEL-07-010340

- name: "Lookup ec2-user password from parameter store"
  vars:
    ansible_python_interpreter: /usr/bin/python3
  ansible.builtin.set_fact:
    ansible_become_password: "{{ lookup('amazon.aws.aws_ssm', '/gold_image/ec2-user') }}"

- name: "MEDIUM | RHEL-07-010340 | PATCH | The Red Hat Enterprise Linux operating system must be configured so that users must provide a password for privilege escalation."
  ansible.builtin.replace:
      path: "{{ item }}"
      regexp: '^([^#].*)NOPASSWD(.*)'
      replace: '\1PASSWD\2'
      validate: '/usr/sbin/visudo -cf %s'
  with_items:
      - "{{ rhel7stig_sudoers_files.stdout_lines }}"
  tags:
    - privilege_escalation

- name: flush handlers
  ansible.builtin.meta: flush_handlers