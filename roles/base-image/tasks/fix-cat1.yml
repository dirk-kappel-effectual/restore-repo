---

- name: "HIGH | RHEL-07-010010 | The Red Hat Enterprise Linux operating system must be configured so that the file permissions, ownership, and group membership of system files and commands match the vendor values."
  block:
      - name: "HIGH | RHEL-07-010010 | AUDIT | The Red Hat Enterprise Linux operating system must be configured so that the file permissions, ownership, and group membership of system files and commands match the vendor values."
        ansible.builtin.shell: |
            rpm -Va --nolinkto --nofiledigest --nosize --nomtime --nodigest --nosignature | grep -E '^(.M|.....U|......G)' | tee /dev/stderr | cut -c13- | sed 's/^ //' | xargs rpm -qf --qf='%{name}\n' | sort -u
        check_mode: false
        failed_when: false
        changed_when: false
        register: rhel_07_010010_audit

      - name: "HIGH | RHEL-07-010010 | PATCH | The Red Hat Enterprise Linux operating system must be configured so that the file permissions, ownership, and group membership of system files and commands match the vendor values."
        ansible.builtin.shell: >
                ( rpm --setugids {{ item }}; rpm --setperms {{ item }} )
                2>&1 1>&2 | grep -v ': No such file or directory$'
        register: rhel_07_010010_patch
        ignore_errors: true
        with_items: "{{ rhel_07_010010_audit.stdout_lines }}"
        when: rhel_07_010010_audit.stdout_lines | length > 0

      - name: "HIGH | RHEL-07-010010 | AUDIT | Error during remediation"
        ansible.builtin.debug:
            msg: "Warning!! The following package files have been reset to default {{ item }}"
        changed_when: true
        loop: "{{ rhel_07_010010_patch.results }}"
        loop_control:
            label: "{{ item.item }}"
        when:
            - rhel_07_010010_patch is changed
            - item is failed
  tags:
      - RHEL-07-010010
      - permissions

- name: "HIGH | RHEL-07-010020 | The Red Hat Enterprise Linux operating system must be configured so that the cryptographic hash of system files and commands matches vendor values."
  block:
      - name: "HIGH | RHEL-07-010020 | AUDIT | The Red Hat Enterprise Linux operating system must be configured so that the cryptographic hash of system files and commands matches vendor values."
        ansible.builtin.shell: 'rpm -Va --noconfig | grep '^..5' | cut -c13- | sed 's/^ //' | xargs rpm -qf --qf='%{name}\n' | sort -u'
        check_mode: false
        failed_when: false
        changed_when: rhel_07_010020_audit.stdout| length > 0
        register: rhel_07_010020_audit

    #   - name: "HIGH | RHEL-07-010020 | AUDIT | The Red Hat Enterprise Linux operating system must be configured so that the cryptographic hash of system files and commands matches vendor values."
    #     ansible.builtin.debug:
    #         msg: "{{ rhel_07_010020_audit.stderr_lines }}"
    #     changed_when: true
    #     when: rhel_07_010020_audit.stdout | length > 0

      - name: "HIGH | RHEL-07-010020 | PATCH | The Red Hat Enterprise Linux operating system must be configured so that the cryptographic hash of system files and commands matches vendor values."
        ansible.builtin.shell: yum reinstall -y {{ item }}
        failed_when: false
        with_items:
            - "{{ rhel_07_010020_audit.stdout_lines }}"
        when: rhel_07_010020_audit.stdout_lines | length > 0
  tags:
      - RHEL-07-010020
      - packages

- name: "HIGH | RHEL-07-010290 | PATCH |  The Red Hat Enterprise Linux operating system must not allow accounts configured with blank or null passwords."
  ansible.builtin.replace:
      path: "{{ item }}"
      regexp: 'nullok ?'
  with_items:
      - /etc/pam.d/system-auth
      - /etc/pam.d/password-auth
  tags:
      - RHEL-07-010290
      - accounts

- name: "HIGH | RHEL-07-010291 | PATCH | The Red Hat Enterprise Linux operating system must not have accounts configured with blank or null passwords."
  block:
      - name: "HIGH | RHEL-07-010291 | PATCH | The Red Hat Enterprise Linux operating system must not have accounts configured with blank or null passwords. | Get users with no pw set"
        ansible.builtin.shell: "awk -F: '!$2 {print $1}' /etc/shadow"
        changed_when: false
        failed_when: false
        check_mode: false
        register: rhel_07_010291_no_pw_users

      - name: "HIGH | RHEL-07-010291 | PATCH | The Red Hat Enterprise Linux operating system must not have accounts configured with blank or null passwords. | Warn on accounts with no passwords"
        ansible.builtin.debug:
            msg:
                - "Alert! You have users that are not using passwords. Please either set a password, lock, or remove the accounts below:"
                - "{{ rhel_07_010291_no_pw_users.stdout_lines }}"
        when:
            - rhel_07_010291_no_pw_users.stdout | length > 0
  tags:
      - RHEL-07-010291
      - accounts

- name: "HIGH | RHEL-07-010300 | PATCH | The Red Hat Enterprise Linux operating system must be configured so that the SSH daemon does not allow authentication using an empty password."
  ansible.builtin.lineinfile:
      path: /etc/ssh/sshd_config
      regexp: "(?i)^#?PermitEmptyPasswords"
      line: PermitEmptyPasswords no
      validate: /usr/sbin/sshd -tf %s
      state: present
  notify: restart sshd
  tags:
      - RHEL-07-010300
      - ssh

# - name: "HIGH | RHEL-07-010440 | PATCH | The Red Hat Enterprise Linux operating system must not allow an unattended or automatic logon to the system via a graphical user interface."
#   ansible.builtin.lineinfile:
#       path: /etc/gdm/custom.conf
#       regexp: (?i)automaticloginenable
#       line: AutomaticLoginEnable=false
#       insertafter: '\[daemon\]'
#   when:
#       - rhel7stig_gui
#       - rhel_07_010440
#   tags:
#       - RHEL-07-010440
#       - CAT1
#       - CCI-000366
#       - SRG-OS-000480-GPOS-00229
#       - SV-204432r603261_rule
#       - V-204432
#       - gui

# - name: "HIGH | RHEL-07-010450 | PATCH | The Red Hat Enterprise Linux operating system must not allow an unrestricted logon to the system."
#   ansible.builtin.lineinfile:
#       path: /etc/gdm/custom.conf
#       regexp: (?i)timedloginenable
#       line: TimedLoginEnable=false
#       insertafter: '\[daemon\]'
#   when:
#       - rhel7stig_gui
#       - rhel_07_010450
#   tags:
#       - RHEL-07-010450
#       - CAT1
#       - CCI-000366
#       - SRG-OS-000480-GPOS-00229
#       - SV-204433r603261_rule
#       - V-204433

- name: |
    "HIGH | RHEL-07-010482 | Red Hat Enterprise Linux operating systems version 7.2 or newer with a Basic Input/Output System (BIOS) must require authentication upon booting into single-user and maintenance modes."
    "HIGH | RHEL-07-010491 | Red Hat Enterprise Linux operating systems version 7.2 or newer using Unified Extensible Firmware Interface (UEFI) must require authentication upon booting into single-user and maintenance modes."
  block:
      - name: "HIGH | RHEL-07-010482 | Red Hat Enterprise Linux operating systems version 7.2 or newer with a Basic Input/Output System (BIOS) must require authentication upon booting into single-user and maintenance modes."
        ansible.builtin.lineinfile:
            path: /boot/grub2/user.cfg
            regexp: ^GRUB2_PASSWORD=
            line: GRUB2_PASSWORD={{ rhel7stig_bootloader_password_hash }}
            create: true
            mode: '0644'
        notify:
            - confirm grub2 user cfg
            - make grub2 config
        no_log: true
        when:
            - rhel7stig_legacy_boot

      - name: "HIGH | RHEL-07-010491 | Red Hat Enterprise Linux operating systems version 7.2 or newer using Unified Extensible Firmware Interface (UEFI) must require authentication upon booting into single-user and maintenance modes."
        ansible.builtin.lineinfile:
            path: "{{ rhel7stig_bootloader_path }}/user.cfg"
            regexp: ^GRUB2_PASSWORD=
            line: GRUB2_PASSWORD={{ rhel7stig_bootloader_password_hash }}
            create: true
            mode: '0644'
        no_log: true
        notify:
            - confirm grub2 user cfg
            - make grub2 config
        when:
            - not rhel7stig_legacy_boot
  when:
      - ansible_distribution_version is version_compare('7.2', '>=')
  tags:
      - RHEL-07-010482
      - grub
      - bootloader

- name: "HIGH | RHEL-07-020000 | PATCH | The Red Hat Enterprise Linux operating system must not have the rsh-server package installed."
  ansible.builtin.package:
      name: rsh-server
      state: absent
  vars:
      ansible_python_interpreter: "{{ python2_bin }}"
  when:
      - "'rsh-server' in ansible_facts.packages"
  tags:
      - RHEL-07-020000
      - rsh

- name: "HIGH | RHEL-07-020010 | PATCH | The Red Hat Enterprise Linux operating system must not have the ypserv package installed."
  ansible.builtin.package:
      name: ypserv
      state: absent
  vars:
      ansible_python_interpreter: "{{ python2_bin }}"
  when:
      - "'ypserv' in ansible_facts.packages"
  tags:
      - RHEL-07-020010
      - ypserv

- name: "HIGH | RHEL-07-020050 | PATCH | The Red Hat Enterprise Linux operating system must prevent the installation of software, patches, service packs, device drivers, or operating system components from a repository without verification they have been digitally signed using a certificate that is issued by a Certificate Authority (CA) that is recognized and approved by the organization."
  ansible.builtin.lineinfile:
      path: /etc/yum.conf
      regexp: ^gpgcheck
      line: gpgcheck=1
      insertafter: '\[main\]'
  tags:
      - RHEL-07-020050
      - yum

- name: "HIGH | RHEL-07-020060 | PATCH | The Red Hat Enterprise Linux operating system must prevent the installation of software, patches, service packs, device drivers, or operating system components of local packages without verification they have been digitally signed using a certificate that is issued by a Certificate Authority (CA) that is recognized and approved by the organization."
  ansible.builtin.lineinfile:
      path: /etc/yum.conf
      regexp: ^localpkg_gpgcheck
      line: localpkg_gpgcheck=1
      insertafter: '\[main\]'
  tags:
      - RHEL-07-020060
      - yum

- name: "HIGH | RHEL-07-020230 | PATCH | The Red Hat Enterprise Linux operating system must be configured so that the x86 Ctrl-Alt-Delete key sequence is disabled on the command line."
  ansible.builtin.systemd:
      name: ctrl-alt-del.target
      masked: true
  tags:
      - RHEL-07-020230
      - systemctl

# - name: "HIGH | RHEL-07-020231 | PATCH | The Red Hat Enterprise Linux operating system must be configured so that the x86 Ctrl-Alt-Delete key sequence is disabled in the Graphical User Interface."
#   ansible.builtin.copy:
#       dest: /etc/dconf/db/local.d/00-disable-ctrl-alt-del
#       content: |
#         [org/gnome/settings-daemon/plugins/media-keys]
#         logout=''
#       mode: '0644'
#   notify: dconf update
#   when:
#       - rhel7stig_dconf_available
#       - rhel_07_020231
#   tags:
#       - RHEL-07-020231
#       - CAT1
#       - CCI-000366
#       - SRG-OS-000480-GPOS-00227
#       - SV-204456r603261_rule
#       - V-204456
#       - gui

- name: "HIGH | RHEL-07-020250 | PATCH | The Red Hat Enterprise Linux operating system must be a vendor supported release."
  block:
    - name: "HIGH | RHEL-07-020250 | AUDIT | Get current OS version."
      ansible.builtin.command:
        cmd: cat /etc/redhat-release
      changed_when: false
      register: cat_release

    - name: "HIGH | RHEL-07-020250 | AUDIT | Compare minimum supported OS version to current OS version."
      ansible.builtin.debug:
        msg: 
        - Minimum supported version of {{ ansible_distribution }} is {{ rhel7stig_min_supported_os_ver[ansible_distribution] }}
        - Current version of {{ ansible_distribution }} is {{ cat_release.stdout }}
  tags:
      - RHEL-07-020250

- name: "HIGH | RHEL-07-020310 | The Red Hat Enterprise Linux operating system must be configured so that the root account must be the only account having unrestricted access to the system."
  block:
      - name: "HIGH | RHEL-07-020310 | AUDIT | The Red Hat Enterprise Linux operating system must be configured so that the root account must be the only account having unrestricted access to the system."
        ansible.builtin.shell: "cat /etc/passwd | awk -F: '($3 == 0 && $1 != \"root\") {i++;print $1 } END {exit i}'"
        check_mode: false
        changed_when: false
        failed_when: false
        register: rhel_07_020310_audit
      
      # This will lock any accounts, other than root, that are found to have unrestricted access to the system.
      - name: "HIGH | RHEL-07-020310 | PATCH | The Red Hat Enterprise Linux operating system must be configured so that the root account must be the only account having unrestricted access to the system."
        ansible.builtin.shell: "passwd -l {{ item }}"
        with_items: "{{ rhel_07_020310_audit.stdout_lines }}"
        when: rhel_07_020310_audit.rc
  tags:
      - RHEL-07-020310
      - accounts

- name: "HIGH | RHEL-07-021350 | The Red Hat Enterprise Linux operating system must implement NIST FIPS-validated cryptography for the following: to provision digital signatures, to generate cryptographic hashes, and to protect data requiring data-at-rest protections in accordance with applicable federal laws, Executive Orders, directives, policies, regulations, and standards."
  block:
      - name: "HIGH | RHEL-07-021350 | PATCH | The Red Hat Enterprise Linux operating system must implement NIST FIPS-validated cryptography for the following: to provision digital signatures, to generate cryptographic hashes, and to protect data requiring data-at-rest protections in accordance with applicable federal laws, Executive Orders, directives, policies, regulations, and standards."
        ansible.builtin.package:
            name: dracut-fips
            state: present
        vars:
            ansible_python_interpreter: "{{ python2_bin }}"
        notify: rebuild initramfs
        when:
            - "'dracut-fips' not in ansible_facts.packages"

      - name: "HIGH | RHEL-07-021350 | PATCH | Disable prelinking."
        ansible.builtin.lineinfile:
            path: /etc/sysconfig/prelink
            regexp: ^#?PRELINKING
            line: PRELINKING=no
        notify: undo existing prelinking
        when:
            - "'prelink' in ansible_facts.packages"

      - name: "HIGH | RHEL-07-021350 | AUDIT | Check /etc/default/grub exists"
        ansible.builtin.stat:
            path: /etc/default/grub
        register: rhel7_stig_default_grub

      - name: "HIGH | RHEL-07-021350 | AUDIT | Capture GRUB_CMDLINE_LINUX from /proc/cmdline"
        block:
            - name: "HIGH | RHEL-07-021350 | AUDIT | Capture GRUB_CMDLINE_LINUX from /proc/cmdline"
              ansible.builtin.shell: grep -oP ' ro \K.*?(?= ?LANG=)' /proc/cmdline
              check_mode: false
              changed_when: false
              failed_when: rhel_07_021350_grub_cmdline_linux_audit.rc > 1
              register: rhel_07_021350_grub_cmdline_linux_audit

            - name: "HIGH | RHEL-07-021350 | PATCH | Copy over a sane /etc/default/grub"
              ansible.builtin.template:
                  src: etc_default_grub.j2
                  dest: /etc/default/grub
                  owner: root
                  group: root
                  mode: 0644
              register: rhel7_stig_grub_template
              vars:
                  grub_cmdline_linux: "{{ rhel_07_021350_grub_cmdline_linux_audit.stdout }}"
        when: not rhel7_stig_default_grub.stat.exists

      - name: "HIGH | RHEL-07-021350 | PATCH | fips=1 must be in /etc/default/grub"
        ansible.builtin.replace:
            path: /etc/default/grub
            regexp: "{{ rhel7stig_regexp_quoted_params }}"
            replace: "{{ rhel7stig_replace_quoted_params }}"
        vars:
            key: GRUB_CMDLINE_LINUX
            param: fips
            value: "{{ fips_value }}"
            append: true
        notify: confirm grub2 user cfg
        when:
            - not ansible_check_mode or
              rhel7_stig_grub_template is not changed

      - name: "HIGH | RHEL-07-021350 | PATCH | If /boot or /boot/efi reside on separate partitions, the kernel parameter boot=<partition> must be added to the kernel command line."
        block:
            - name: "HIGH | RHEL-07-021350 | PATCH | If /boot or /boot/efi reside on separate partitions, the kernel parameter boot=<partition> must be added to the kernel command line."
              ansible.builtin.replace:
                  path: /etc/default/grub
                  regexp: "{{ rhel7stig_regexp_quoted_params }}"
                  replace: "{{ rhel7stig_replace_quoted_params }}"
              with_items:
                  - "{{ ansible_mounts | json_query(query) }}"
              vars:
                  query: "[?mount=='{{ rhel7stig_boot_part }}'] | [0]"
                  key: GRUB_CMDLINE_LINUX
                  param: boot
                  value: UUID={{ item.uuid }}
                  insert: true
              when:
                  - rhel7stig_boot_part not in ['/', '']
                  - item.uuid is defined
                  - not ansible_check_mode or
                    rhel7_stig_grub_template is not changed
              notify: confirm grub2 user cfg
              register: result

            - name: "HIGH | RHEL-07-021350 | AUDIT | Verify kernel parameters in /etc/default/grub"
              ansible.builtin.shell: grep -P '^\s*GRUB_CMDLINE_LINUX=".*(?<=[" ]){{ item | regex_escape }}(?=[" ]).*"$' /etc/default/grub
              check_mode: false
              with_items:
                  - "fips={{ fips_value }}"
                  - boot=UUID={{ ansible_mounts | json_query(query) }}
              vars:
                  query: "[?mount=='{{ rhel7stig_boot_part }}'].uuid | [0]"
              register: rhel_07_021350_audit
              changed_when:
                  - ansible_check_mode
                  - rhel_07_021350_audit is failed
              failed_when:
                  - rhel_07_021350_audit.rc not in [ 0, 1 ]
                  - not ansible_check_mode

              when:
                  - not ansible_check_mode or
                    rhel7_stig_grub_template is not changed
                  - rhel7stig_boot_part not in ['/', ''] or
                    'boot=' not in item
  tags:
      - RHEL-07-021350
      - fips

- name: "HIGH | RHEL-07-021710 | PATCH | The Red Hat Enterprise Linux operating system must not have the telnet-server package installed."
  ansible.builtin.package:
      name: telnet-server
      state: absent
  vars:
      ansible_python_interpreter: "{{ python2_bin }}"
  when:
       - "'telnet-server' in ansible_facts.packages"
  tags:
      - RHEL-07-021710
      - telnet

- name: "HIGH | RHEL-07-032000 | The Red Hat Enterprise Linux operating system must use a virus scan program."
  ansible.builtin.script: ./scripts/install.sh -i
  tags:
      - RHEL-07-032000
      - antivirus

- name: "HIGH | RHEL-07-040390 | PATCH | The Red Hat Enterprise Linux operating system must be configured so that the SSH daemon is configured to only use the SSHv2 protocol."
  ansible.builtin.lineinfile:
      path: /etc/ssh/sshd_config
      regexp: "(?i)^#?Protocol"
      line: Protocol 2
      validate: /usr/sbin/sshd -t -f %s
      state: present
  notify: restart sshd
  when:
      - ansible_distribution_version is not version_compare('7.4', '>=')
  tags:
      - RHEL-07-040390
      - ssh

- name: "HIGH | RHEL-07-040540 | The Red Hat Enterprise Linux operating system must not contain .shosts files."
  block:
      - name: "HIGH | RHEL-07-040540 | AUDIT | The Red Hat Enterprise Linux operating system must not contain .shosts files."
        ansible.builtin.shell: find {{ rhel7stig_local_mounts | join(' ') }} -xdev -name '.shosts'
        check_mode: false
        changed_when: false
        register: rhel_07_040540_audit

      - name: "HIGH | RHEL-07-040540 | PATCH | The Red Hat Enterprise Linux operating system must not contain .shosts files."
        ansible.builtin.file:
            path: "{{ item }}"
            state: absent
        with_items:
            - "{{ rhel_07_040540_audit.stdout_lines }}"
  tags:
      - RHEL-07-040540
      - shosts

- name: "HIGH | RHEL-07-040550 | The Red Hat Enterprise Linux operating system must not contain shosts.equiv files."
  block:
      - name: "HIGH | RHEL-07-040550 | AUDIT | The Red Hat Enterprise Linux operating system must not contain shosts.equiv files."
        ansible.builtin.shell: find {{ rhel7stig_local_mounts | join(' ') }} -xdev -name 'shosts.equiv'
        check_mode: false
        changed_when: false
        register: rhel_07_040550_audit

      - name: "HIGH | RHEL-07-040550 | PATCH | The Red Hat Enterprise Linux operating system must not contain shosts.equiv files."
        ansible.builtin.file:
            path: "{{ item }}"
            state: absent
        with_items:
            - "{{ rhel_07_040550_audit.stdout_lines }}"
  tags:
      - RHEL-07-040550
      - shosts

- name: "HIGH | RHEL-07-040690 | PATCH | The Red Hat Enterprise Linux operating system must not have a File Transfer Protocol (FTP) server package installed unless needed."
  ansible.builtin.package:
      name: vsftpd
      state: absent
  vars:
      ansible_python_interpreter: "{{ python2_bin }}"
  when:
      - "'vsftpd' not in ansible_facts.packages"
  tags:
      - RHEL-07-040690
      - ftp

- name: "HIGH | RHEL-07-040700 | PATCH | The Red Hat Enterprise Linux operating system must not have the Trivial File Transfer Protocol (TFTP) server package installed if not required for operational support."
  ansible.builtin.package:
      name:
          - tftp
          - tftp-server
      state: absent
  vars:
      ansible_python_interpreter: "{{ python2_bin }}"
  when:
      - "('tftp' in ansible_facts.packages or 'tftp-server' in ansible_facts.packages)"
  tags:
      - RHEL-07-040700
      - tftp

- name: "HIGH | RHEL-07-040800 | SNMP community strings on the Red Hat Enterprise Linux operating system must be changed from the default."
  block:
      - name: "HIGH | RHEL-07-040800 | AUDIT | SNMP community strings on the Red Hat Enterprise Linux operating system must be changed from the default."
        ansible.builtin.shell: grep {{ item }} /etc/snmp/snmpd.conf
        check_mode: false
        failed_when: false
        changed_when: false
        register: rhel_07_040800_audit
        with_items:
            - public
            - private

      - name: "HIGH | RHEL-07-040800 | PATCH | SNMP community strings on the Red Hat Enterprise Linux operating system must be changed from the default."
        ansible.builtin.replace:
            dest: /etc/snmp/snmpd.conf
            regexp: (^com2sec.*default\s+)(public|private)
            replace: \1{{ rhel7stig_snmp_community }}
        notify: restart snmpd
        with_items:
            - "{{ rhel_07_040800_audit.results }}"
        when: item.stdout_lines | length > 0
  tags:
      - RHEL-07-040800
      - snmp
