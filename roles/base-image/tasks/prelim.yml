---

- name: "PRELIM | Add the required packages | Python 3"
  block:
      - name: Check if python36-rpm package installed
        ansible.builtin.shell: rpm -q python36-rpm
        failed_when: ( python36_rpm_present.rc not in [ 0, 1 ] )
        changed_when: false
        register: python36_rpm_present

      - name: "PRELIM | Add the EPEL repository required for the python36-rpm pkg"
        ansible.builtin.package:
            name: https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
            state: present
        register: epel_installed
        when:
            - python36_rpm_present.rc != '0'

      - name: "PRELIM | Check required packages installed | Python3 "
        ansible.builtin.package:
            name: "{{ item }}"
            state: present
        register: python3reqs_installed
        loop:
            - python36-rpm
            - libselinux-python3
  when:
      - ( ansible_python.version.major == 3  and ansible_python.version.minor == 6 )

- name: "PRELIM | RHEL-07-020680 | RHEL-07-020710 | RHEL-07-020720 | RHEL-07-020730 | Gather local interactive user directories"
  ansible.builtin.shell: "getent passwd {1000..65535} | cut -d: -f6 | sort -u | grep -v '/var/' | grep -v '/nonexistent/*' | grep -v '/run/*'"
  changed_when: false
  failed_when: false
  register: rhel_07_020680_getent
  tags:
      - RHEL-07-020680
      - RHEL-07-020710
      - RHEL-07-020720
      - RHEL-07-020730


- name: "PRELIM | RHEL-07-020680 | RHEL-07-020710 | RHEL-07-020720 | RHEL-07-020730 | Set fact for home directory paths for interactive users"
  ansible.builtin.set_fact:
      rhel_07_stig_interactive_homedir_results: "{{ rhel_07_020680_getent.stdout_lines }}"
  when:
      - rhel_07_020680_getent.stdout_lines is defined
  tags:
      - RHEL-07-020680
      - RHEL-07-020710
      - RHEL-07-020720
      - RHEL-07-020730

- name: "PRELIM | RHEL-07-020710 | RHEL-07-020720 | RHEL-07-020730 | AUDIT | Find ini files for interactive users."
  ansible.builtin.shell: find "{{ item }}" -maxdepth 1 -type f | awk -F"/" '$NF ~ /^\..*$/ {print $NF}' | grep -v history
  changed_when: false
  failed_when: false
  register: rhel_07_020710_ini_file_list
  with_items:
      - "{{ rhel_07_stig_interactive_homedir_results }}"
  when:
      - rhel_07_stig_interactive_homedir_results is defined
  tags:
      - RHEL-07-020710
      - RHEL-07-020720
      - RHEL-07-020730

- name: "PRELIM | RHEL-07-020710 | RHEL-07-020720 | RHEL-07-020730 | Set fact for home directory paths for interactive users"
  ansible.builtin.set_fact:
      rhel_07_stig_interactive_homedir_inifiles: "{{ rhel_07_020710_ini_file_list.results | map(attribute='stdout_lines') | list }}"
  when:
      - rhel_07_stig_interactive_homedir_results is defined
  tags:
      - RHEL-07-020680
      - RHEL-07-020710
      - RHEL-07-020720
      - RHEL-07-020730

- name: "PRELIM | Find all sudoers files."
  ansible.builtin.shell: "find /etc/sudoers /etc/sudoers.d/ -type f ! -name '*~' ! -name '*.*'"
  changed_when: false
  failed_when: false
  check_mode: false
  register: rhel7stig_sudoers_files
  tags:
      - RHEL-07-010340
      - RHEL-07-010350

- name: "PRELIM | RHEL-07-010480 | RHEL-07-010490 | RHEL-07-021350 | Install grub2-tools."
  ansible.builtin.package:
      name: grub2-tools
      state: present
  tags:
      - RHEL-07-010481
      - RHEL-07-010482
      - RHEL-07-010483
      - RHEL-07-010491
      - RHEL-07-021350

- name: "PRELIM | RHEL-07-010480 | RHEL-07-010490 | RHEL-07-021350 | RHEL-07-021700 | Check whether machine is UEFI-based"
  ansible.builtin.stat:
      path: /sys/firmware/efi
  register: rhel_07_sys_firmware_efi
  tags:
      - RHEL-07-010481
      - RHEL-07-010482
      - RHEL-07-010483
      - RHEL-07-010491
      - RHEL-07-021350
      - RHEL-07-021700

- name: "PRELIM | Gather mount information"
  ansible.builtin.setup:
      gather_subset: hardware,!all,!min
      filter: ansible_mounts
  when:
      - ansible_mounts is not defined
  tags:
      - always

- name: "PRELIM | ensure cronie is available"
  ansible.builtin.package:
      name: cronie
      state: present
  tags:
      - RHEL-07-020030
      - RHEL-07-020040

- name: "PRELIM | RHEL-07-020620 | RHEL-07-020630 | RHEL-07-020640 | RHEL-07-020650 | RHEL-07-020660 | RHEL-07-020690 | Parse /etc/passwd"
  ansible.builtin.include_tasks:
      file: parse_etc_passwd.yml
  vars:
      rhel7stig_passwd_tasks: "RHEL-07-020620 RHEL-07-020630 RHEL-07-020640 RHEL-07-020650 RHEL-07-020660 RHEL-07-020690"
  tags:
      - RHEL-07-020600
      - RHEL-07-020620
      - RHEL-07-020630
      - RHEL-07-020640
      - RHEL-07-020650
      - RHEL-07-020660
      - RHEL-07-020670
      - RHEL-07-020680
      - RHEL-07-020690
      - RHEL-07-020700

- name: "PRELIM | RHEL-07-021100 | RHEL-07-031000 | RHEL-07-031010 | Ensure rsyslog is installed when required."
  ansible.builtin.package:
      name: rsyslog
      state: present
  tags:
      - RHEL-07-021100
      - RHEL-07-031000
      - RHEL-07-031010

- name: "PRELIM | RHEL-07-030300 | RHEL-07-030310 | RHEL-07-030320 | RHEL-07-030321 | Install audit remote plugin."
  ansible.builtin.package:
      name: audispd-plugins
      state: present
  tags:
      - auditd
      - RHEL-07-030300
      - RHEL-07-030310
      - RHEL-07-030320
      - RHEL-07-030321

- name: "PRELIM | RHEL-07-030330 | Determine audit log partition."
  block:
      - name: "PRELIM | RHEL-07-030330 | Find audit.log location"
        ansible.builtin.shell: grep -oP '^log_file\s*=\s*\K.*?(?=\s*$)' /etc/audit/auditd.conf
        changed_when: false
        check_mode: false
        register: rhel_07_audit_log_file

      - name: "PRELIM | RHEL-07-030330 | Find partition holding audit.log"
        ansible.builtin.shell: df --output=target {{ rhel_07_audit_log_file.stdout }} | tail -n 1
        changed_when: false
        check_mode: false
        register: rhel_07_audit_part
  tags:
      - auditd
      - RHEL-07-030330

- name: "PRELIM | RHEL-07-020030 | RHEL-07-020040 | RHEL-07-021600 | RHEL-07-021610 RHEL-07-021620 | Install and initialize AIDE"
  block:
      - name: "PRELIM | RHEL-07-020030 | RHEL-07-020040 | RHEL-07-021600 | RHEL-07-021610 | RHEL-07-021620 | Install AIDE"
        ansible.builtin.package:
            name: aide
            state: present
        notify: "init aide and wait"

      - name: "PRELIM | RHEL-07-020030 | RHEL-07-020040 | RHEL-07-021600 | RHEL-07-021610 | RHEL-07-021620 | Check for existing AIDE database"
        ansible.builtin.stat:
            path: "{{ rhel7stig_aide_db_file }}"
        changed_when: not rhel7stig_aide_db_status.stat.exists
        check_mode: false
        register: rhel7stig_aide_db_status
        notify: "init aide and wait"
  tags:
      - patch
      - aide
      - RHEL-07-020030
      - RHEL-07-020040
      - RHEL-07-021600
      - RHEL-07-021610
      - RHEL-07-021620

- name: "PRELIM | RHEL-07-020210 | RHEL-07-020220 | Install SELinux related dependencies"
  ansible.builtin.package:
      name:
          - libselinux-python
          - policycoreutils-python
          - selinux-policy-targeted
      state: present
  tags:
      - SELinux

- name: "PRELIM | Bare bones SSH Server"
  block:
      - name: "PRELIM | Install SSH"
        ansible.builtin.package:
            name: openssh-server
            state: present

      - name: PRELIM | Start SSH
        ansible.builtin.service:
            name: sshd
            state: started
            enabled: true

- name: "PRELIM | Check whether machine is UEFI-based"
  ansible.builtin.stat:
      path: /sys/firmware/efi
  register: rhel7_efi_boot
  tags:
      - always

- name: set bootloader type
  block:
      - name: "PRELIM | set fact if UEFI boot | RHEL or OEL"
        ansible.builtin.set_fact:
            rhel7stig_bootloader_path: "{{ rhel7stig_efi_boot_path }}redhat"
            rhel7stig_not_boot_path: "{{ rhel7stig_legacy_boot_path }}"
            rhel7stig_legacy_boot: false
        when:
            - rhel7_efi_boot.stat.exists

      - name: "PRELIM | set if not UEFI boot"
        ansible.builtin.set_fact:
            rhel7stig_bootloader_path: "{{ rhel7stig_legacy_boot_path }}"
            rhel7stig_not_boot_path: "{{ rhel7stig_efi_boot_path }}"
            rhel7stig_legacy_boot: true
        when: not rhel7_efi_boot.stat.exists

      - name: PRELIM | output bootloader and efi state
        ansible.builtin.debug:
            msg:
                - "bootloader path set to {{ rhel7stig_bootloader_path }}"
                - "legacy boot equals {{ rhel7stig_legacy_boot }}"
  tags:
      - always

- name: "PRELIM | Gather interactive user ID min"
  block:
      - name: "PRELIM | Gather interactive user ID min"
        ansible.builtin.shell: grep ^UID_MIN /etc/login.defs | awk '{print $2}'
        changed_when: false
        failed_when: false
        register: rhel7stig_min_uid

      - name: "PRELIM | Gather interactive user ID max"
        ansible.builtin.shell: grep ^UID_MAX /etc/login.defs | awk '{print $2}'
        changed_when: false
        failed_when: false
        register: rhel7stig_max_uid

      - name: "PRELIM | Setting the fact"
        ansible.builtin.set_fact:
            rhel7stig_interactive_uid_start: "{{ rhel7stig_min_uid.stdout }}"
            rhel7stig_interactive_uid_stop: "{{ rhel7stig_max_uid.stdout }}"
  tags:
      - always
      - auditd
